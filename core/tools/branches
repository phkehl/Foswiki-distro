#!/usr/bin/env perl
# See bottom of file for license and copyright information

# Print the local branches and their descriptions
# for Item* branches, pull the description from the Foswiki tasks web.
# To add local descriptions,  use the following command:
#  git branch Item12345 --edit-description

use strict;
use warnings;
use LWP::Simple;
use Data::Dumper;

my %items;
my %seen;

sub clean {
    map { s/^[\s\*]*\s// } @_;
    map { s/\s*$// } @_;
    return @_;
}

sub descr {

    #print "DESCR for @_\n";
    $_ = `git config branch.@_.description`;
    s/\s*$//;
    return $_;
}

sub summary {
    my $it = shift;
    my $br = shift;
    ($br) = $br =~ m/(Item\d+)/;

    #print "SUMMARY for @_\n";
    return $items{$it} if $items{$it};
    my $url = "http://foswiki.org/Tasks/ItemSummaryQuery?item=$it;skin=text";
    my $description = get $url;
    $description =~ s#<b>.*</b>\n##;
    $description =~ s#^$br:## if $br;
    $items{$it} = $description;
    return $description;
}

sub indent {
    $_ = shift;
    s/^/      /mg;
    return $_;
}

my @branches = clean `git branch --color=never --list --all`;

#print Data::Dumper::Dumper( \@branches );
my %merged = map { $_ => 1 } clean `git branch --color=never --merged`;

#print Data::Dumper::Dumper( \%merged );

for my $branch (@branches) {

    next if $branch =~ /HEAD/;

    # Don't display upstream branches that we already have locally
    my ($remotebr) = $branch =~ m/remotes\/(.*)/;
    next if ( $remotebr && $seen{$remotebr} );

    $branch =~ s#\bremotes/##;
    my $asis = `git branch --list -a --color=always $branch`;
    $asis =~ s/\s*$//;

    # Get the upstream status - gone, ahead or behind
    my $status = `git branch --list -a -vv $branch`;
    my ($upstream) = $status =~ m/.*?\[([^\]]+)\]/;
    $upstream ||= '';

    my ( $remote, $state ) = split( /:/, $upstream );

    if ( defined $remote ) {
        $seen{$remote} = 1;
    }
    else {
        $state = "no remote" unless $remotebr;
    }

    print "  $asis";
    print " \033[33m(merged)\033[0m"
      if ( $merged{$branch} and $asis !~ /^\*/ );
    print " \033[104m($state)\033[0m" if $state;
    print "\n";
    next if $branch =~ m/Release/;
    my $desc = descr $branch;
    print indent $desc. "\n" if $desc;
    if ( $branch =~ m/(Item(?:[0-9]){3,5})/ ) {
        print indent summary( $1, $branch );
    }
    elsif ( $desc =~ m/(Item(?:[0-9]){3,5})/ ) {
        print indent summary( $1, $branch );
    }

    print "\n";
}

__END__
Foswiki - The Free and Open Source Wiki, http://foswiki.org/

This code is based upon a contribution on StackExchange
http://stackoverflow.com/a/10261571/3087690

Additional Copyright (C) 2015 Foswiki Contributors. Foswiki Contributors
are listed in the AUTHORS file in the root of this distribution.
NOTE: Please extend that file, not this notice.

This program is free software; you can redistribute it and/or
modify it under the terms of the GNU General Public License
as published by the Free Software Foundation; either version 2
of the License, or (at your option) any later version. For
more details read LICENSE in the root of this distribution.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

As per the GPL, removal of this notice is prohibited.


